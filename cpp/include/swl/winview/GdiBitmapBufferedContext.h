#if !defined(__SWL_WIN_VIEW__GDI_BITMAP_BUFFERED_CONTEXT__H_ )
#define __SWL_WIN_VIEW__GDI_BITMAP_BUFFERED_CONTEXT__H_ 1


#include "swl/winview/GdiContextBase.h"


namespace swl {

//-----------------------------------------------------------------------------------
//  Bitmap-buffered Context for GDI in Microsoft Windows

class SWL_WIN_VIEW_API GdiBitmapBufferedContext: public GdiContextBase
{
public:
	typedef GdiContextBase base_type;

public:
	GdiBitmapBufferedContext(HWND hWnd, const Region2<int>& drawRegion, const bool isAutomaticallyActivated = true);
	GdiBitmapBufferedContext(HWND hWnd, const RECT& drawRect, const bool isAutomaticallyActivated = true);
	virtual ~GdiBitmapBufferedContext();

private:
	GdiBitmapBufferedContext(const GdiBitmapBufferedContext &);
	GdiBitmapBufferedContext & operator=(const GdiBitmapBufferedContext &);

public:
	/// swap buffers
	/*virtual*/ bool swapBuffer();
	/// resize the context
	/*virtual*/ bool resize(const int x1, const int y1, const int x2, const int y2);

	/// get the native context
	/*virtual*/ boost::any getNativeContext()  {  return isActivated() ? boost::any(&memDC_) : boost::any();  }
	/*virtual*/ const boost::any getNativeContext() const  {  return isActivated() ? boost::any(&memDC_) : boost::any();  }

    /// get the off-screen surface generated by the DIB section
	void * getOffScreen()  {  return dibBits_;  }
	const void * getOffScreen() const  {  return dibBits_;  }

private:
	/// activate the context
	/*virtual*/ bool activate();
	/// de-activate the context
	/*virtual*/ bool deactivate();

	bool createOffScreen();
	bool createOffScreenBitmap(const int colorBitCount, const int colorPlaneCount);
	void deleteOffScreen();

private:
	/// a window handle
	HWND hWnd_;
	/// a target context
	HDC hDC_;

	/// a buffered context
	HDC memDC_;
	/// a buffered bitmap
	HBITMAP memBmp_;
	/// an old bitmap
	HBITMAP oldBmp_;
    /// an off-screen surface generated by the DIB section
	void *dibBits_;
};

}  // namespace swl


#endif  // __SWL_WIN_VIEW__GDI_BITMAP_BUFFERED_CONTEXT__H_
