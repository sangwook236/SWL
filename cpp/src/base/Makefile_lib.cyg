#  Makefile for Static & Shared Library
include ../../Makefile_common.cyg


#----------------------------------------------------------------------------

ifeq ($(BUILD_MODE),_DEBUG)
  OUT_DIR=./Debug_Cygwin
  INSTALL_DIR=../../bin/Debug_Cygwin
else
ifeq ($(BUILD_MODE),_DEBUG_PROFILE)
  OUT_DIR=./Profile_Cygwin
  INSTALL_DIR=../../bin/Profile_Cygwin
else
  OUT_DIR=./Release_Cygwin
  INSTALL_DIR=../../bin/Release_Cygwin
endif
endif

SRCS=swAutoEraseable.cpp swConstant.cpp swController.cpp swErrorState.cpp swEvent.cpp swEventFlag.cpp \
  swFactoryMethod.cpp swINotifier.cpp swIObserver.cpp swManager.cpp swMessage.cpp swModel.cpp swName.cpp \
  swObject.cpp swPort.cpp swPresentationModel.cpp swReporter.cpp swScheduler.cpp swState.cpp swSupervisor.cpp \
  swSymbol.cpp swUtil.cpp swView.cpp
OBJS_BASE=$(SRCS:.cpp=.o)
OBJS=$(addprefix $(OUT_DIR)/, $(OBJS_BASE))
LIB_OBJS=$(OBJS)

LIB_BASE_NAME=swl_base
IMPORT_LIB_BASE_NAME=$(LIB_BASE_NAME)_dll

STATIC_LIB_NAME=lib$(LIB_BASE_NAME).a
SHARED_LIB_NAME=$(LIB_BASE_NAME).dll
DEF_FILE=$(SHARED_LIB_NAME:.dll=.def)
IMPORT_LIB_NAME=lib$(IMPORT_LIB_BASE_NAME).a


#----------------------------------------------------------------------------

INCS=-I$(WORKING_DIR)/include/stl/stlport -I/usr/include/g++-3 -I/usr/include -I../../include
LIB_SEARCH_PATH=-L./ -L/usr/lib/ -L/lib/ -L$(INSTALL_DIR)
ifeq ($(LIB_BUILD_TYPE),__BUILD_SHARED_LIB)
  LIBS=$(LIB_SEARCH_PATH) -lm -lstdc++
else
  LIBS=$(LIB_SEARCH_PATH) =lm -lstdc++
endif

BASIC_DEF=-DSWL_BASE_EXPORT
ifeq ($(LIB_BUILD_TYPE),__BUILD_SHARED_LIB)
# AUXILIARY_DEF=-mno-cygwin -mwindows -mconsole -mdll
  AUXILIARY_DEF=-mno-cygwin -mdll
else
  AUXILIARY_DEF=-mno-cygwin
endif

DEP_INCS=$(INCS)
#DEP_FLAGS=-M -MG -nostdinc -nostdinc++
DEP_FLAGS=$(DEP_INCS) -MM -MG

DLLTOOL=dlltool
DLLWRAP=dllwrap
DLLWRAP_OPTION=--mno-cygwin


#----------------------------------------------------------------------------

all_shared : shared install_shared

all_static : static install_static

install_shared :
	$(CP) $(OUT_DIR)/$(SHARED_LIB_NAME) $(OUT_DIR)/$(IMPORT_LIB_NAME) $(INSTALL_DIR)/

install_static :
	$(CP) $(OUT_DIR)/$(STATIC_LIB_NAME) $(INSTALL_DIR)/

uninstall_shared :
	$(RM) $(INSTALL_DIR)/$(SHARED_LIB_NAME) $(INSTALL_DIR)/$(IMPORT_LIB_NAME)

uninstall_static :
	$(RM) $(INSTALL_DIR)/$(STATIC_LIB_NAME)

shared : $(OUT_DIR)/$(SHARED_LIB_NAME)

static : $(OUT_DIR)/$(STATIC_LIB_NAME)

$(OUT_DIR)/$(SHARED_LIB_NAME) : $(LIB_OBJS) $(OUT_DIR)/$(IMPORT_LIB_NAME) $(OUT_DIR)/$(DEF_FILE)
#	$(DLLWRAP) $(DLLWRAP_OPTION) --def $(OUT_DIR)/$(DEF_FILE) --dllname=$@ --output-lib=$(OUT_DIR)/$(IMPORT_LIB_NAME) --driver-name=gcc $(LIB_OBJS) $(LIBS)
	$(DLLWRAP) $(DLLWRAP_OPTION) --def $(OUT_DIR)/$(DEF_FILE) --dllname=$@ $(LIB_OBJS) $(LIBS)

$(OUT_DIR)/$(STATIC_LIB_NAME) : $(LIB_OBJS)
#	$(AR) rc $@ $^
#	$(RANLIB) $@
	$(AR) rs $@ $^

$(OUT_DIR)/$(IMPORT_LIB_NAME) : $(OUT_DIR)/$(DEF_FILE)
	$(DLLTOOL) --input-def=$< --output-lib=$@ --dllname=$(SHARED_LIB_NAME)

$(OUT_DIR)/$(DEF_FILE) : $(LIB_OBJS)
#	echo EXPORTS > $@
#   nm $(OUT_DIR)/$(SHARED_LIB_NAME) | grep ' T _' | sed 's/.* T _//' >> $@

#	$(DLLTOOL) --kill-at --export-all --dllname=$(OUT_DIR)/$(SHARED_LIB_NAME) --output-def=$@ $^
	$(DLLTOOL) --kill-at --export-all --output-def=$@ $^

clean_shared :
#	$(RM) $(OBJS) core
	$(RM) $(OUT_DIR)/*.o $(OUT_DIR)/$(SHARED_LIB_NAME) $(OUT_DIR)/$(IMPORT_LIB_NAME) $(OUT_DIR)/$(DEF_FILE)

clean_static :
	$(RM) $(OUT_DIR)/*.o $(OUT_DIR)/$(STATIC_LIB_NAME)

new_shared :
#	touch $(SRCS); %(MAKE)
	$(MAKE) clean_shared
	$(MAKE) all_shared

new_static :
	$(MAKE) clean_static
	$(MAKE) all_static
dep :
#	gccmakedep $(DEP_INCS) $(SRCS)
	$(CXX) $(DEP_FLAGS) $(BASIC_DEF) $(AUXILIARY_DEF) $(SRCS) > Makefile.depend

#	touch .depend
#	makedepend -f .depend $(INCS) *.cpp

#.cpp.o :
$(OUT_DIR)/%.o : %.cpp
	$(CXX) $(CXXFLAGS) $(BASIC_DEF) $(AUXILIARY_DEF) $(OUTPUT_OPTION) -c $<


#----------------------------------------------------------------------------
#  dependency

include Makefile.depend
